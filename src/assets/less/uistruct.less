/**
 * File: uistruct.less
 * 
 * Description: Defines extra styles not in main.less
 */

.iconClick {
    // clickable material icon
    // .iconClick
    //      .material-symbols-outlined !!use_round_icon!!
    //      span Some Text (optional)

    display: inline-block;
    color: var(--main-color);
    text-decoration: none;
    cursor: pointer;
    font-weight: bold;
    font-size: 0.8rem;
    position: relative;
    user-select: none;

    & > * {
        vertical-align: middle;
    }

    &.square {
        padding: 4px 8px;
    }

    &:hover {
        text-decoration: none;
    }

    &:hover.square::before {
        box-shadow: inset 0 0 0 100vw;
    }

    &:hover:not(.square) .material-symbols-outlined::before {
        box-shadow: inset 0 0 0 100vw;
    }

    &.square::before {
        position: absolute;
        content: "";
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        border-radius: 4px;
        opacity: 0.1;
    }

    .material-symbols-outlined {
        position: relative;
        font-size: 24px; // rotate 에니메이션이 필요한 경우가 있어서 바꿈 + 공간절약
        // font-size: 1.5rem;
    }

    &:not(.square) {
        .material-symbols-outlined::before {
            position: absolute;
            content: "";
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            border-radius: 100%;
            opacity: 0.1;
        }
    }
}

.svgIcon {
    //svg icon
    // fill: var(--main-color);
    fill: #fff;
    width: 24px;
    height: 24px;

    &.reactive {
        fill: black;
        &:hover {
            fill: var(--main-color);
        }
    }
    &.reactiveDanger {
        fill: black;
        &:hover {
            fill: var(--caution-color);
        }
    }

    &.white {
        fill: rgba(255, 255, 255, 0.5);
    }
    &.black {
        fill: black;
    }
    &.danger {
        fill: var(--caution-color);
    }
}

.wideOnMobile {
    @media (max-width: 767px) {
        width: 100% !important;
    }
}
.editHandle {
    // text button for edit -> [edit]
    font-size: 1rem;
    font-weight: 400;
    color: #fff;
    text-decoration: none;
    // vertical-align: super;

    display: inline-flex;
    justify-content: center;
    align-items: center;
    min-width: 2.5rem;
    height: 100%;
    background: #222325;
    padding: 0.5rem;
    border-radius: 0.5rem;

    &:hover {
        text-decoration: underline;
    }

    cursor: pointer;
}

.infoBox {
    // info box for displaying information
    /*

    .infoBox
        .infoTitle Title
        hr
        .state
            .smallTitle Small Title
            .smallValue Small Value
        
        .state.nobreak
            .smallTitle Small Title
            .ellipsis Ellipsised value...

        .infoValue
            .smallTitle Editable value
            template(v-if="...")
                form.editValue(@submit.prevent="...")
                    input

                    template(v-if="updatingValue")
                        img.loading(src="@/assets/img/loading.png")
                    label.material-symbols-outlined.save(v-else) done
                        input(type="submit" hidden)
                    span.material-symbols-outlined.cancel(@click="...") close

            div(v-else)
                .smallValue {{ value }}&nbsp;
                span.editHandle(@click="...") [EDIT]
        
        .infoValue
            .smallTitle Ellipsised editable value
            template(v-if="...")
                form.editValue(@submit.prevent="...")
                    input

                    template(v-if="updatingValue")
                        img.loading(src="@/assets/img/loading.png")
                    label.material-symbols-outlined.save(v-else) done
                        input(type="submit" hidden)
                    span.material-symbols-outlined.cancel(@click="...") close
            template(v-else)
                .ellipsis {{ value }}&nbsp;
                span.editHandle(@click="...") [EDIT]
    */

    // --smallTitle-width: 130px; <- can be adjusted

    --smallTitle-width: 120px;
    position: relative;
    // background-color: #fff;
    // padding: 0 1.2rem;
    // padding: 1.2rem;

    // border-radius: 4px;
    // border: 1px solid rgba(0, 0, 0, 0.2);
    // box-shadow: 2px 2px 3px -2px rgba(0, 0, 0, 0.2);

    .titleHead {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        flex-wrap: wrap;
        font-size: 1.5em;
        margin: calc(0.83em - 4px) 0;

        & > * {
            margin: 4px 0;
            flex-shrink: 0;
        }

        h2 {
            // font-size: 1em;
            font-size: 2.375rem;
        }

        .moreInfo {
            display: flex;
            cursor: pointer;
            font-size: 0.8rem;
            align-items: center;

            & > * {
                vertical-align: middle;
            }

            .fill {
                display: none;
            }

            &:hover {
                .fill {
                    display: inline-block;
                }
                .noFill {
                    display: none;
                }
            }
        }
    }

    .infoTitle {
        display: inline-block;
        font-size: 1.2rem;
        font-weight: 500;
    }

    .state {
        margin-bottom: 0.75rem;

        &.nobreak {
            white-space: nowrap;
        }

        .ellipsis {
            max-width: calc(100% - var(--smallTitle-width));
        }

        .smallValue {
            font-size: 1rem;
        }
    }

    .smallTitle {
        font-size: 1rem;
        font-weight: 400;
        display: inline-block;
        width: var(--smallTitle-width);
        width: 10.625rem;
    }

    .smallValue {
        display: inline-block;
        min-width: 280px;
    }

    .infoValue {
        max-width: 100%;
        margin-bottom: 1.5rem;

        &
            > *:not(.ellipsis, span, .editHandle, a, select, ._tooltip):not(
                :first-child
            ) {
            min-height: 44px;
            display: flex;
            align-items: center;
            flex-wrap: wrap;
            // margin: 4px 0;
            // padding: 0 1rem;
            // background: linear-gradient(
            //         0deg,
            //         rgba(255, 255, 255, 0.05) 0%,
            //         rgba(255, 255, 255, 0.05) 100%
            //     ),
            //     #16171a;
            // border-radius: 0.5rem;
        }

        .editValue {
            display: flex;
            align-items: center !important;
            flex-grow: 1;
            position: relative;
            flex-wrap: nowrap !important;
            // margin: 4px 0;
            gap: 0.5rem;

            // .loading {
            //   vertical-align: middle;
            //   // margin-right: 10px;
            // }

            .save,
            .cancel {
                position: relative;
                font-size: 1.3rem;
                font-weight: 500;
                cursor: pointer;

                &::after {
                    position: absolute;
                    content: "";
                    top: 50%;
                    left: 50%;
                    width: 100%;
                    height: 100%;
                    padding: 4px;
                    transform: translate(-50%, -50%);
                    border-radius: 50%;
                    background-color: #293fe61a;
                    display: none;
                }

                &:hover::after {
                    display: block;
                }
            }

            .save {
                color: var(--main-color);
                // margin-right: 10px;
            }

            input,
            .input {
                flex-grow: 1;
                // margin-right: 10px;
            }
        }
    }
}

// .detailRecord {
//     position: absolute;
//     left: 0;
//     top: 0;
//     right: 0;
//     bottom: 0;
//     display: flex;
//     flex-direction: column;
//     background-color: #121214;
//     transform: translateX(110%);
//     transition: all 0.3s;
//     border-radius: 8px;

//     &.show {
//         transform: translateX(0px);
//     }

//     .header {
//         flex-shrink: 0;
//         display: flex;
//         align-items: center;
//         justify-content: space-between;
//         height: 60px;
//         padding: 0 20px;
//         font-weight: 500;
//         border-bottom: 1px solid rgba(225, 225, 225, 0.1);
//         border-radius: 10px 10px 0 0;

//         .material-symbols-outlined {
//             cursor: pointer;
//         }

//         .name {
//             flex-grow: 1;
//             padding-left: 20px;
//         }

//         button {
//             padding: 0;
//             font-size: 0.9rem;
//         }
//     }

//     .content {
//         flex-grow: 1;
//         overflow-y: auto;
//         padding: 20px;
//         font-size: 0.8rem;

//         .row {
//             display: flex;
//             flex-wrap: wrap;
//             align-items: center;
//             margin-bottom: 12px;

//             &.indent {
//                 padding-left: 20px;

//                 .key {
//                     font-weight: normal;
//                     width: 180px;
//                 }
//             }
//         }

//         .key {
//             font-weight: 500;
//             // width: 170px;
//             width: 200px;
//         }

//         .value {
//             flex-grow: 1;
//             min-width: 270px;
//             margin: 6px 0 6px;

//             input {
//                 width: 100%;
//             }
//         }
//     }
// }

.flex-wrap {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;

    &.space-between {
        justify-content: space-between;
    }

    &.center {
        justify-content: center;
    }

    &.end {
        justify-content: flex-end;
    }
}

.table-menu-wrap {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    margin: 2rem 0 0.5rem;
    gap: 10px;

    .table-functions,
    .table-actions {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .table-actions {
        margin-left: auto;
    }

    .search-btn {
        max-width: unset;
    }

    .search-ing-btn {
        height: 40px;
        display: flex;
        align-items: center;
        gap: 10px;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 8px;
        padding: 0 8px;

        .search-for-value {
            padding-left: 5px;
            color: #999;
            cursor: auto;

            &:hover {
                color: #fff;
            }
        }

        .reset-btn {
            fill: #999;
            width: 18px;
            height: 18px;
            cursor: pointer;

            &:hover {
                fill: #fff;
            }
        }
    }
}

/**
 * File: uistruct.less
 * 
 * Description: Defines extra styles not in main.less
 */

.iconClick {
  // clickable material icon
  // .iconClick
  //      .material-symbols-outlined !!use_round_icon!!
  //      span Some Text (optional)

  display: inline-block;
  color: var(--main-color);
  text-decoration: none;
  cursor: pointer;
  font-weight: bold;
  font-size: 0.8rem;
  position: relative;
  user-select: none;

  & > * {
    vertical-align: middle;
  }

  &.square {
    padding: 4px 8px;
  }

  &:hover {
    text-decoration: none;
  }

  &:hover.square::before {
    box-shadow: inset 0 0 0 100vw;
  }

  &:hover:not(.square) .material-symbols-outlined::before {
    box-shadow: inset 0 0 0 100vw;
  }

  &.square::before {
    position: absolute;
    content: "";
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius: 4px;
    opacity: 0.1;
  }

  .material-symbols-outlined {
    position: relative;
    font-size: 24px; // rotate 에니메이션이 필요한 경우가 있어서 바꿈 + 공간절약
    // font-size: 1.5rem;
  }

  &:not(.square) {
    .material-symbols-outlined::before {
      position: absolute;
      content: "";
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      border-radius: 100%;
      opacity: 0.1;
    }
  }
}
.wideOnMobile {
  @media (max-width: 767px) {
    width: 100% !important;
  }
}
.editHandle {
  // text button for edit -> [edit]
  font-size: 0.66rem;
  font-weight: normal;
  color: var(--main-color);
  text-decoration: none;
  vertical-align: super;

  &:hover {
    text-decoration: underline;
  }

  cursor: pointer;
}

.infoBox {
  // info box for displaying information
  /*

    .infoBox
        .infoTitle Title
        hr
        .state
            .smallTitle Small Title
            .smallValue Small Value
        
        .state.nobreak
            .smallTitle Small Title
            .ellipsis Ellipsised value...

        .infoValue
            .smallTitle Editable value
            template(v-if="...")
                form.editValue(@submit.prevent="...")
                    input

                    template(v-if="updatingValue")
                        img.loading(src="@/assets/img/loading.png")
                    label.material-symbols-outlined.save(v-else) done
                        input(type="submit" hidden)
                    span.material-symbols-outlined.cancel(@click="...") close

            div(v-else)
                .smallValue {{ value }}&nbsp;
                span.editHandle(@click="...") [EDIT]
        
        .infoValue
            .smallTitle Ellipsised editable value
            template(v-if="...")
                form.editValue(@submit.prevent="...")
                    input

                    template(v-if="updatingValue")
                        img.loading(src="@/assets/img/loading.png")
                    label.material-symbols-outlined.save(v-else) done
                        input(type="submit" hidden)
                    span.material-symbols-outlined.cancel(@click="...") close
            template(v-else)
                .ellipsis {{ value }}&nbsp;
                span.editHandle(@click="...") [EDIT]
    */

  // --smallTitle-width: 130px; <- can be adjusted

  --smallTitle-width: 120px;
  position: relative;
  background-color: #fff;
  padding: 1.2rem;
  // border-radius: 4px;
  // border: 1px solid rgba(0, 0, 0, 0.2);
  // box-shadow: 2px 2px 3px -2px rgba(0, 0, 0, 0.2);

  .titleHead {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    font-size: 1.5em;
    margin: calc(0.83em - 4px) 0;

    & > * {
      margin: 4px 0;
      flex-shrink: 0;
    }

    h2 {
      font-size: 1em;
    }

    .moreInfo {
      display: flex;
      cursor: pointer;
      font-size: 0.8rem;
      align-items: center;

      & > * {
        vertical-align: middle;
      }

      .fill {
        display: none;
      }

      &:hover {
        .fill {
          display: inline-block;
        }
        .noFill {
          display: none;
        }
      }
    }
  }

  .infoTitle {
    display: inline-block;
    font-size: 1.2rem;
    font-weight: 500;
  }

  .state {
    margin-bottom: 0.75rem;

    &.nobreak {
      white-space: nowrap;
    }

    .ellipsis {
      max-width: calc(100% - var(--smallTitle-width));
    }

    .smallValue {
      font-size: 0.8rem;
    }
  }

  .smallTitle {
    font-size: 0.8rem;
    font-weight: 500;
    display: inline-block;
    width: var(--smallTitle-width);
  }

  .smallValue {
    display: inline-block;
    min-width: 280px;
  }

  .infoValue {
    max-width: 100%;
    margin-bottom: 0.5rem;

    .smallTitle {
      font-size: 0.7rem;
      font-weight: normal;
    }

    & > *:not(.ellipsis, span, .editHandle, a, select):not(:first-child) {
      min-height: 44px;
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      margin: 4px 0;
    }

    .editValue {
      display: flex;
      align-items: center !important;
      flex-grow: 1;
      position: relative;
      flex-wrap: nowrap !important;
      margin: 4px 0;
      gap: 0.5rem;

      .loading {
        vertical-align: middle;
        // margin-right: 10px;
      }

      .save,
      .cancel {
        position: relative;
        font-size: 1.3rem;
        font-weight: 500;
        cursor: pointer;

        &::after {
          position: absolute;
          content: "";
          top: 50%;
          left: 50%;
          width: 100%;
          height: 100%;
          padding: 4px;
          transform: translate(-50%, -50%);
          border-radius: 50%;
          background-color: #293fe61a;
          display: none;
        }

        &:hover::after {
          display: block;
        }
      }

      .save {
        color: var(--main-color);
        // margin-right: 10px;
      }

      input,
      .input {
        flex-grow: 1;
        // margin-right: 10px;
      }
    }
  }
}
